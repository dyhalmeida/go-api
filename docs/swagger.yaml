basePath: /
definitions:
  dto.CredentialsInputDTO:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.CredentialsOutputDTO:
    properties:
      access_token:
        type: string
    type: object
  dto.ProductInputDTO:
    properties:
      name:
        type: string
      price:
        type: number
    type: object
  dto.UserInputDTO:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  handlers.Error:
    properties:
      message:
        type: string
    type: object
host: localhost:3333
info:
  contact:
    email: dyhalmeida@gmail.com
    name: Diego Almeida
    url: https://www.linkedin.com/in/dyhalmeida
  description: Product API with Authentication
  termsOfService: http://swagger.io/terms/
  title: Go Expert API Example
  version: "1.0"
paths:
  /products:
    post:
      consumes:
      - application/json
      description: Create Products
      parameters:
      - description: product request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ProductInputDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Create Product
      tags:
      - products
  /users:
    post:
      consumes:
      - application/json
      description: 'Create User: A user can be created to access the system by passing
        their email, name and password.'
      parameters:
      - description: user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserInputDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Create User
      tags:
      - users
  /users/token:
    post:
      consumes:
      - application/json
      description: Get a access token
      parameters:
      - description: user credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CredentialsInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CredentialsOutputDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get a access token
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
